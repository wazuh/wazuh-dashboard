name: Build final packages

on:
  workflow_dispatch:
    inputs:
      system:
        type: choice
        description: 'Package OS'
        required: true
        options:
          - deb
          - rpm
        default: 'deb'
      architecture:
        type: choice
        description: 'Package architecture'
        required: true
        options:
          - amd64
          - x86_64
        default: amd64
      revision:
        type: string
        description: 'Package revision'
        required: true
        default: '0'
      reference_security_plugins:
        type: string
        description: 'Branch/tag/commit of the wazuh-security-dashboards-plugin repository to build the security plugin'
        required: true
        default: 'master'
      reference_wazuh_plugins:
        type: string
        description: 'Branch/tag/commit of the wazuh-dashboard-plugins repository to build the main plugins'
        required: true
        default: 'master'
      is_stage:
        type: boolean
        description: 'Set production nomenclature'
        required: true
        default: false
      checksum:
        type: boolean
        description: 'Generate package checksum'
        required: true
        default: false


jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    name: Validate inputs
    steps:
      - name: Validate inputs
        run: |
          if [ "${{ inputs.architecture }}" = "amd64" ] && [ "${{ inputs.system }}" = "rpm" ]; then
            echo "Invalid combination of architecture and system"
            exit 1
          fi
          if [ "${{ inputs.architecture }}" = "x86_64" ] && [ "${{ inputs.system }}" = "deb" ]; then
            echo "Invalid combination of architecture and system"
            exit 1
          fi

  build-dashboard:
    needs: [validate-inputs]
    name: Build dashboard
    uses: wazuh/wazuh-dashboard/.github/workflows/build.yml@modify-package-generation-actions
    with:
      CHECKOUT_TO: ${{ github.head_ref || github.ref_name }}
      CACHE: true

  build-plugins:
    needs: [validate-inputs]
    name: Build plugins
    uses: wazuh/wazuh-dashboard/.github/workflows/build_and_cache_plugins.yml@modify-package-generation-actions
    with:
      reference_wazuh_plugins: ${{ inputs.reference_wazuh_plugins }}
      reference_security_plugins: ${{ inputs.reference_security_plugins }}

  build-base-package:
    needs: [build-plugins, build-dashboard]
    runs-on: ubuntu-latest
    name: Generate final packages
    strategy:
      fail-fast: false
      matrix:
        # TODO: Add arm64 support
        ARCHITECTURE: [ x64 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup variables
        run: |
          echo "CURRENT_DIR=$(pwd -P)" >> $GITHUB_ENV
          echo "VERSION=$(yarn --silent wzd-version)" >> $GITHUB_ENV
          echo "REVISION=$(yarn --silent wzd-revision)" >> $GITHUB_ENV

      - name: Setup packages names
        run: |
          echo "WAZUH_DASHBOARD_SLIM=wazuh-dashboard_${{ env.VERSION }}-${{ env.REVISION }}_${{ matrix.ARCHITECTURE }}_${{ inputs.REFERENCE_WAZUH_DASHBOARD }}.tar.gz" >> $GITHUB_ENV
          echo "WAZUH_SECURITY_PLUGIN=wazuh-security-dashboards-plugin_${{ env.VERSION }}-${{ env.REVISION }}_${{ inputs.REFERENCE_SECURITY_PLUGIN }}.zip" >> $GITHUB_ENV
          echo "WAZUH_PLUGINS=wazuh-dashboard-plugins_${{ env.VERSION }}-${{ env.REVISION }}_${{ inputs.REFERENCE_WAZUH_PLUGINS }}.zip" >> $GITHUB_ENV

      - name: Cache security plugin
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CURRENT_DIR }}/artifacts/security-plugin
          key: ${{ env.WAZUH_SECURITY_PLUGIN }}

      - name: Cache plugins
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CURRENT_DIR }}/artifacts/plugins
          key: ${{ env.WAZUH_PLUGINS }}

      - name: Cache dashboard artifact
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CURRENT_DIR }}/artifacts/target
          key: ${{ env.WAZUH_DASHBOARD_SLIM }}

      - name: Zip plugins
        run: |
          zip -r -j ${{ env.CURRENT_DIR }}/artifacts/wazuh-package.zip ${{ env.CURRENT_DIR }}/artifacts/plugins
          zip -r -j ${{ env.CURRENT_DIR }}/artifacts/security-package.zip ${{ env.CURRENT_DIR }}/artifacts/security-plugin
          zip -r -j ${{ env.CURRENT_DIR }}/artifacts/dashboard-package.zip ${{ env.CURRENT_DIR }}/artifacts/dashboard/${{ env.WAZUH_DASHBOARD_SLIM }}


      - name: Build packages
        run: |
          cd ${{ env.CURRENT_DIR }}/dev-tools/build-packages
          bash ./build-packages.sh \
            -v ${{ env.VERSION }} \
            -r ${{ inputs.REVISION }} \
            -a file://${{env.CURRENT_DIR}}/artifacts/wazuh-package.zip \
            -s file://${{env.CURRENT_DIR}}/artifacts/security-package.zip \
            -b file://${{env.CURRENT_DIR}}/artifacts/dashboard-package.zip \
            --tar


      - name: Upload tar packages
        uses: actions/upload-artifact@v3
        with:
          name: wazuh-dashboard-${{ env.VERSION }}-${{ inputs.REVISION }}-linux-${{ matrix.ARCHITECTURE }}.tar.gz
          path: ${{ env.CURRENT_DIR }}/dev-tools/build-packages/output/wazuh-dashboard-${{ env.VERSION }}-${{ inputs.REVISION }}-linux-${{ matrix.ARCHITECTURE }}.tar.gz
          retention-days: 30
